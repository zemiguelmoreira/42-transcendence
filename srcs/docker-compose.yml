services:
  nginx:
    build: ./nginx
    container_name: nginx
    image: nginx:42
    volumes:
      - nginx-conf:/etc/nginx/conf.d:ro
    ports:
      - "443:443"
    expose:
      - "80"
    depends_on:
      - frontend
    restart: always
    networks:
      - transcendence-net

  frontend:
    build: ./frontend
    container_name: frontend
    image: frontend:42
    volumes:
      - frontend-data:/usr/share/nginx/html:ro
    expose:
      - "80"
    depends_on:
      - user_management
    restart: always
    networks:
      - transcendence-net

  user_management:
    build: ./UserApi
    container_name: userapi
    image: userapi:42
    volumes:
      - user-app:/usr/src/app
    init: true
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    restart: always
    networks:
      - transcendence-net
      - backend-net

  chat_server:
    build: ./ChatServer
    container_name: chat_server
    image: chat_server:42
    volumes:
      - chat-app:/usr/src/app
    init: true
    ports:
      - "8002:8002"
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    env_file:
      - .env
    depends_on:
      - redis
    restart: always
    networks:
      - transcendence-net
      - backend-net
  
  postgres:
    build: ./postgres
    container_name: postgres
    image: postgres:42
    volumes:
      - postgres-data:/var/lib/postgresql/data/:rw
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_USER}"]
      interval: 5s
      timeout: 4s
      retries: 5
    env_file:
      - .env
    restart: always
    networks:
      - backend-net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend-net
      - transcendence-net

volumes:
  nginx-conf:
    name: nginx-conf
    driver: local
    driver_opts:
      type: none
      device: ./nginx/conf
      o: bind
  frontend-data:
    name: frontend-data
    driver: local
    driver_opts:
      type: none
      device: ./frontend
      o: bind
  user-app:
    name: user-app
    driver: local
    driver_opts:
      type: none
      device: ./UserApi
      o: bind
  chat-app:
    name: chat-app
    driver: local
    driver_opts:
      type: none
      device: ./ChatServer
      o: bind
  postgres-data:
    name: postgres-data
    driver: local
    driver_opts:
      type: none
      device: ${SQL_PATH}
      o: bind
  # es-data:
  #   name: es-data
  #   driver: local


networks:
  transcendence-net:
    name: transcendence-net
    driver: bridge
  backend-net:
    name: backend-net
    driver: bridge
    internal: true
